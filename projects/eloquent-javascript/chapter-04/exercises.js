////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(a, b, c) {
 let count = [];
 if(a < b && c > 0) {
     for(let i = a; i <= b; i +=c) {
         count.push(i);
     } return count;
 } else if (a > b && c > 0) {
     for(let i = b; i <= a; i += c) {
        count.push(i);
     } return count;
 } else if(a === b || c < 0){
     return count;
 } else if (a < b /*&& c === null*/) {
     for(let i = a; i <= b; i ++) {
         count.push(i);
     } return count;
 } else if (a > b /*&& c === null*/) {
     for(let i = b; i <= a; i ++) {
         count.push(i);
     } return count;
 } 
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(arr) {
let count = 0;
for(let i = 0; i < arr.length; i++) {
    count += arr[i];
} return count;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
     let revArr = [];
 if (array.length === 0) {
     return [];
 } else if(array.length !== 0) {
     for (let i = 0; i < array.length; i++) {
         revArr.unshift(array[i]);
     }
         return revArr;
 }
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
   for (let i = 0; i <(array.length-1)/2; i++) {
       let holder = array[i];
       array[i] = array[array.length-1-i];
       array[array.length-1-i] = holder;
   }
   return array;
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
let list = null;
for (let i = array.length-1; i > -1; i--) {
//for (let node = list; node < array.length; node = node.rest) {
  // console.log(i);
  console.log(array[i]);
    list = {value: array[i], rest: list};
   
//} 
}
return list;
};


////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray() {

}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend() {

}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth() {

}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(a, b) {
    if (a === b) {
    return true;
}
return false;
} 

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
